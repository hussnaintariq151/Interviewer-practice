┌────────────────────┐
│  Start Interview   │ ◄────────┐
└────────┬───────────┘          │
         │                      │
         ▼                      │
┌────────────────────┐          │
│  Upload JD + CV    │          │
└────────┬───────────┘          │
         │                      │
         ▼                      │
┌────────────────────────────┐
│ LangGraph: Context Builder │◄──┐
│ (Extracts JD intent, skills│   │
└────────┬───────────────────┘   │
         │                       │
         ▼                       │
┌────────────────────────────┐
│ Ask Initial Question (Q1)  │◄── GPT-based
└────────┬───────────────────┘
         │
         ▼
┌────────────────────────────┐
│ Receive Video/Audio Answer │
└────────┬───────────────────┘
         │
         ▼
┌──────────────────────────────┐
│ Whisper STT + Parse Answer   │
│ (Text + NLP Skill Matcher)   │
└────────┬─────────────────────┘
         │
         ▼
┌──────────────────────────────┐
│ LangGraph: Response Analyzer │
│  ↳ Extract mentioned skills  │
│  ↳ Check JD relevance        │
└────────┬─────────────────────┘
         │
         ▼
┌────────────────────────────────────────┐
│ Generate Follow-up Q (Dynamic Q2, Q3…) │
│  ↳ GPT generates adaptive Qs           │
└────────┬───────────────────────────────┘
         │
         ▼
     [Loop Continues]
         │
         ▼
┌──────────────────────────────┐
│ After N Questions            │
│ Generate Report + Evaluation│
└────────┬─────────────────────┘
         │
         ▼
┌──────────────────────────────┐
│ Final Output                 │
│ ✅ Score                     │
│ ✅ Strengths/Weaknesses      │
│ ✅ Suggestions for Resume    │
│ ✅ Improvement Plan          │
└──────────────────────────────┘


==============================================================================================================
==============================================================================================================

| Layer                    | Tool                        |
| ------------------------ | --------------------------- |
| Interview Logic          |   LangGraph                 |
| Question Generation      | **GPT-4o / GPT-4**          |
| Audio Transcription      | **Whisper (OpenAI)**        |
| Answer Parsing           | **LLM + regex + spaCy/NLP** |
| Scoring & Feedback       | **Custom Evaluation + GPT** |
| Frontend (Optional)      | **React / Next.js**         |
| Backend API              | **FastAPI**                 |
| Storage (video, answers) | **S3 / Supabase / local**   |
| DB (metadata)            | **PostgreSQL / MongoDB**    |



















=================================================================================================================

USER INPUTS
────────────
              Job Description (JD)      Interviewer Tone (Dropdown)
                          │                           │
                        ──┴──────────────┬────────────┘
                                         ▼
                                 ┌────────────────────┐
                                 │ JD Parser Node     │
                                 └────────┬───────────┘
                                          ▼
        Update LangGraph InterviewState:
        - job_description
        - interviewer_tone ← (user-selected)

──────────────────────────────────────────────────────────────────────
🧠 INTERVIEW LOOP
──────────────────────────────────────────────────────────────────────

USER SPEAKS INTO CAMERA + MIC
─────────────────────────────

     ┌────────────────────────────┐
     │  Parallel Perception Nodes │
     └────────────┬───────────────┘
                  ▼
 ┌────────────────────────┐     ┌────────────────────┐     ┌──────────────────────┐
 │ 🎭 Face Emotion Node    │     │ 🎤 Tone Emotion Node │     │ 📝 Speech-to-Text Node │
 │  (DeepFace, Mediapipe) │     │  (Parselmouth)      │     │  (Whisper STT)        │
 └────────────┬───────────┘     └──────────┬─────────┘     └────────────┬──────────┘
              ▼                            ▼                            ▼
                  ┌─────────────────────────────────────────────┐
                  │        🔁 SYNC CHECKPOINT NODE               │
                  │ Wait for all 3: facial, tone, transcript     │
                  └────────────────┬────────────────────────────┘
                                   ▼
                     ┌──────────────────────────────┐
                     │ NLP & Language Style Node     │ ← (Spacy/TextBlob/Regex)
                     └────────────┬─────────────────┘
                                  ▼
            Update InterviewState with:
            - facial_emotion
            - tone_emotion
            - transcript
            - filler_words
            - style_tags

──────────────────────────────────────────────────────────────────────
🧠 INTERVIEWER NODE (GPT Agent)
──────────────────────────────────────────────────────────────────────

┌─────────────────────────────────────────────────────────────────────┐
│ 🤖 GPT Interviewer Node (LangGraph)                                  │
│ - Uses Job Description context                                       │
│ - Uses prior answers, facial/tone cues                              │
│ - Follows user-specified interviewer_tone (Formal, Friendly, etc.)  │
│ - Asks next question accordingly                                     │
└─────────────────────────────────────────────────────────────────────┘
                                  │
                                  ▼
                      ┌─────────────────────┐
                      │ Show Next Question  │
                      │ → UI (voice + text) │
                      └─────────────────────┘
                                  │
                                  ▼
                        ↩ Loop back to Perception Nodes

──────────────────────────────────────────────────────────────────────
📊 FEEDBACK & REPORT (Optional)
──────────────────────────────────────────────────────────────────────

      After N questions or manual trigger:
          ▼
┌───────────────────────────────────────────────────────────────┐
│ Feedback Generator Node                                        │
│ - Scores answer quality, vocabulary, emotional tone            │
│ - Suggests improvement (e.g., "Avoid filler words like 'um'") │
│ - Visual UI with graphs or heatmap of emotional variation      │
└───────────────────────────────────────────────────────────────┘
          ▼
  ┌─────────────────────────────┐
  │ UI Report & Suggestions     │
  └─────────────────────────────┘



=====================================================================================================================


class InterviewState(BaseModel):
    resume_keywords: List[str]
    jd_keywords: List[str]
    role_inferred: str
    interviewer_tone: str  # From dropdown
    facial_emotion: str
    tone_emotion: str
    transcript: str
    filler_words: List[str]
    style_tags: List[str]
    previous_questions: List[str]
    previous_answers: List[str]


